using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the minimumNumber function below.
    static int minimumNumber(int n, string password) {
        // Return the minimum number of characters to make the password strong
        int strong = 0;
        int numbers = 1;
        int Upper = 1;
        int Lower = 1;
        int Special = 1;
       
        char[] word = password.ToCharArray();
         
        for ( int a = 0; a < word.Length; a++){
            if (Char.IsDigit(word[a])){
                numbers = 0;
            } else if (Char.IsUpper(word[a])){
                Upper = 0;
            } else if (Char.IsLower(word[a])){
                Lower = 0;
            } else {
                Special = 0;
            }
        }
        strong = Special + Lower + Upper+ numbers;
        if (word.Length + strong < 6){
            
            if (strong + word.Length < 6){
                return 6 - word.Length;
            }else {
                return 0;
            }
        } else {
            return Special + Lower + Upper+ numbers;
        }
        
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        string password = Console.ReadLine();

        int answer = minimumNumber(n, password);

        textWriter.WriteLine(answer);

        textWriter.Flush();
        textWriter.Close();
    }
}
